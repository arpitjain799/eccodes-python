name: Check and publish

on:

  push:
    branches: [master, develop]

  pull_request:
    branches: [master]

  release:
    types: [created]

jobs:

  checks:
    strategy:
      fail-fast: false
      matrix:
        # platform: [windows-latest, ubuntu-latest, macos-latest]
        # python-version: ["3.6", "3.7", "3.8", "3.9"]
        # method: ["conda", "ecmwflibs"]

        platform: [ubuntu-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9"]
        method: ["conda"]

    name: Python ${{ matrix.python-version }} on ${{ matrix.platform }} (${{ matrix.method }})
    runs-on: ${{ matrix.platform }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - if: matrix.method == 'conda'
        name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov isort black flake8

      - if: matrix.method == 'conda'
        run: conda install eccodes

      - if: matrix.method == 'ecmwflibs'
        name: Install ecmwflibs
        run: pip install ecmwflibs

      - name: Tests
        run: |
          python setup.py develop
          pip install -r tests/requirements.txt
          pytest

  deploy:
    if: ${{ github.event_name == 'release' }}

    name: Upload to Pypi
    needs: checks

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist
          twine upload dist/*

